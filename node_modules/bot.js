// bot.js
const { Client, Intents } = require('discord.js');
const mongoose = require('mongoose');

const client = new Client({ intents: [Intents.FLAGS.GUILDS, Intents.FLAGS.GUILD_MEMBERS] });

// 連接到 MongoDB
mongoose.connect('mongodb://localhost:27017/discordBot', { useNewUrlParser: true, useUnifiedTopology: true });

// 定義用戶 Schema
const userSchema = new mongoose.Schema({
  userId: String,
  serverId: String,
  accountInfo: Object,
  username: String,
  password: String,
  
});

const User = mongoose.model('User', userSchema);

client.on('interactionCreate', async interaction => {
    if (!interaction.isCommand()) return;
  
    const { commandName, options } = interaction;
  
    if (commandName === 'login') {
      const username = options.getString('username');
      const password = options.getString('password');
  
      let user = await User.findOne({ username });
  
      if (!user) {
        await interaction.reply('Account not found!');
      } else if (user.password === password) {
        await interaction.reply('Logged in successfully!');
      } else {
        await interaction.reply('Incorrect password!');
      }
    }
    if (commandName === 'register') {
        const username = options.getString('username');
        const password = options.getString('password');
        let user = await User.findOne({ username });
        if (user) {
            await interaction.reply('Username already exists!');
          } else {
            user = new User({ userId: interaction.user.id, username, password });
            await user.save();
            await interaction.reply('Account registered successfully!');
          }
        }
})

client.on('guildMemberAdd', async (member) => {
  const user = await User.findOne({ userId: member.id, serverId: member.guild.id });
  if (!user) {
    const newUser = new User({
      userId: member.id,
      serverId: member.guild.id,
      accountInfo: {},
    });
    await newUser.save();
  }
});

client.login('你的Discord機器人Token');
